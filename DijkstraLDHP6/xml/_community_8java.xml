<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_community_8java" kind="file">
    <compoundname>Community.java</compoundname>
    <innerclass refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community" prot="public">main::java::com::company::dijkstratest::Community</innerclass>
    <innernamespace refid="namespacemain_1_1java_1_1com_1_1company_1_1dijkstratest">main::java::com::company::dijkstratest</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacemain_1_1java_1_1com_1_1company_1_1dijkstratest" refkind="compound"><highlight class="keyword">package<sp/></highlight><highlight class="normal">main.java.com.company.dijkstratest;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.ArrayList;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Collections;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community" kindref="compound">Community</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12" refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1a00e314391bafea784ad183152dcd6091" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>ArrayList&lt;Vertex&gt;<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1a00e314391bafea784ad183152dcd6091" kindref="member">vertices</ref>;</highlight></codeline>
<codeline lineno="13" refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1a2ccabf2789253dffe72aa412e7412f7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>ArrayList&lt;Vertex&gt;<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1a2ccabf2789253dffe72aa412e7412f7d" kindref="member">toBeProcessed</ref>;</highlight></codeline>
<codeline lineno="14" refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1a580104f4f16e9646bb1c4b3ea36c20a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>ArrayList&lt;Vertex&gt;<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1a580104f4f16e9646bb1c4b3ea36c20a5" kindref="member">eliminatedList</ref>;</highlight></codeline>
<codeline lineno="15" refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1adbb6dc448c6e9ffdcd3207b5117e5ac6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>ArrayList&lt;Pair&gt;<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1adbb6dc448c6e9ffdcd3207b5117e5ac6" kindref="member">steps</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1a948a27b50995af847cd53c449349ed7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1a948a27b50995af847cd53c449349ed7c" kindref="member">Community</ref>(ArrayList&lt;Vertex&gt;<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1a00e314391bafea784ad183152dcd6091" kindref="member">vertices</ref>,<sp/>ArrayList&lt;Vertex&gt;<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1a2ccabf2789253dffe72aa412e7412f7d" kindref="member">toBeProcessed</ref>,<sp/>ArrayList&lt;Vertex&gt;<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1a580104f4f16e9646bb1c4b3ea36c20a5" kindref="member">eliminatedList</ref>)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.vertices<sp/>=<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1a00e314391bafea784ad183152dcd6091" kindref="member">vertices</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.toBeProcessed<sp/>=<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1a2ccabf2789253dffe72aa412e7412f7d" kindref="member">toBeProcessed</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.eliminatedList<sp/>=<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1a580104f4f16e9646bb1c4b3ea36c20a5" kindref="member">eliminatedList</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1aba69300314e63161ff7e0a3b5aebe2ad" kindref="member">resetSteps</ref>();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1ac67908826386b0b27d640714ddca078c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ArrayList&lt;Vertex&gt;<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1ac67908826386b0b27d640714ddca078c" kindref="member">buildCommunity</ref>()</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_vertex" kindref="compound">Vertex</ref><sp/>highest<sp/>=<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1af8ba9d3ca770ca1683efe6e0b842d2d5" kindref="member">getHighestCentralitied</ref>();</highlight><highlight class="comment">//highest<sp/>centrality<sp/>vertex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1a2ccabf2789253dffe72aa412e7412f7d" kindref="member">toBeProcessed</ref><sp/>=<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1a11c0953e985a94460b905218c3c80291" kindref="member">getCommunityCandidates</ref>(highest);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1aba4c016c6178f4b4f6e2a29874c0c619" kindref="member">deleteCandidates</ref>(<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1a2ccabf2789253dffe72aa412e7412f7d" kindref="member">toBeProcessed</ref>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1a2ccabf2789253dffe72aa412e7412f7d" kindref="member">toBeProcessed</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1af8ba9d3ca770ca1683efe6e0b842d2d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_vertex" kindref="compound">Vertex</ref><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1af8ba9d3ca770ca1683efe6e0b842d2d5" kindref="member">getHighestCentralitied</ref>()</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minDiameter<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_vertex" kindref="compound">Vertex</ref><sp/>highest<sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_vertex" kindref="compound">Vertex</ref><sp/>vertex<sp/>:<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1a00e314391bafea784ad183152dcd6091" kindref="member">vertices</ref>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(minDiameter<sp/>&gt;<sp/>vertex.getDiameter()<sp/>&amp;&amp;<sp/>!<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1ab4d06c5bd90490a5713b1aa083cdeef9" kindref="member">isIsolated</ref>(vertex))</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minDiameter<sp/>=<sp/>vertex.getDiameter();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>highest<sp/>=<sp/>vertex;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>highest;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1a11c0953e985a94460b905218c3c80291" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ArrayList&lt;Vertex&gt;<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1a11c0953e985a94460b905218c3c80291" kindref="member">getCommunityCandidates</ref>(<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_vertex" kindref="compound">Vertex</ref><sp/>highest)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ArrayList&lt;Vertex&gt;<sp/>candidatesList<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ArrayList&lt;Vertex&gt;();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1adbb6dc448c6e9ffdcd3207b5117e5ac6" kindref="member">steps</ref><sp/>=<sp/>highest.getSteps();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Collections.sort(<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1adbb6dc448c6e9ffdcd3207b5117e5ac6" kindref="member">steps</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>6;<sp/>i++)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidatesList.add(steps.get(i).getVertex());</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidatesList.add(highest);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>candidatesList;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1aba4c016c6178f4b4f6e2a29874c0c619" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1aba4c016c6178f4b4f6e2a29874c0c619" kindref="member">deleteCandidates</ref>(ArrayList&lt;Vertex&gt;<sp/>cCandidates)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_vertex" kindref="compound">Vertex</ref><sp/>vertex<sp/>:<sp/>cCandidates)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.out.println(</highlight><highlight class="stringliteral">&quot;Vertex<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>vertex.getName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>deleted<sp/>from<sp/>vertices&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eliminatedList.add(vertex);</highlight><highlight class="comment">//add<sp/>the<sp/>eliminated<sp/>vertex<sp/>to<sp/>eliminatedList</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices.remove(vertex);</highlight><highlight class="comment">//<sp/>remove<sp/>it<sp/>from<sp/>original<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1ab4d06c5bd90490a5713b1aa083cdeef9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1ab4d06c5bd90490a5713b1aa083cdeef9" kindref="member">isIsolated</ref>(<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_vertex" kindref="compound">Vertex</ref><sp/>v)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ArrayList&lt;Pair&gt;<sp/>vSteps<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ArrayList&lt;Pair&gt;();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vSteps<sp/>=<sp/>v.getSteps();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1ab4d06c5bd90490a5713b1aa083cdeef9" kindref="member">isIsolated</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_pair" kindref="compound">Pair</ref><sp/>pair<sp/>:<sp/>vSteps)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stepNumber<sp/>=<sp/>pair.getStepNumber();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stepNumber<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isIsolated<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1ab4d06c5bd90490a5713b1aa083cdeef9" kindref="member">isIsolated</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1aba69300314e63161ff7e0a3b5aebe2ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1aba69300314e63161ff7e0a3b5aebe2ad" kindref="member">resetSteps</ref>()</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ArrayList&lt;Pair&gt;<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1aba69300314e63161ff7e0a3b5aebe2ad" kindref="member">resetSteps</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ArrayList&lt;Pair&gt;();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_vertex" kindref="compound">Vertex</ref><sp/>vertex<sp/>:<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1a00e314391bafea784ad183152dcd6091" kindref="member">vertices</ref>)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resetSteps<sp/>=<sp/>vertex.getSteps();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_pair" kindref="compound">Pair</ref><sp/>pair<sp/>:<sp/>resetSteps)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_vertex" kindref="compound">Vertex</ref><sp/>pV<sp/>=<sp/>pair.getVertex();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community_1a580104f4f16e9646bb1c4b3ea36c20a5" kindref="member">eliminatedList</ref>.contains(pV))</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair.setStepNumberToInfinity();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/JulyaMaria/git/Practica_6_LDH_Dijkstra/DijkstraLDHP6/src/main/java/com/company/dijkstratest/Community.java"/>
  </compounddef>
</doxygen>
