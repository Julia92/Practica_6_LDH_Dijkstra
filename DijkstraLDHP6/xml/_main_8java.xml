<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_main_8java" kind="file">
    <compoundname>Main.java</compoundname>
    <innerclass refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main" prot="public">main::java::com::company::dijkstratest::Main</innerclass>
    <innernamespace refid="namespacemain_1_1java_1_1com_1_1company_1_1dijkstratest">main::java::com::company::dijkstratest</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">package<sp/></highlight><highlight class="normal">main.java.com.company.dijkstratest;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.ArrayList;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Collections;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.List;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main" kindref="compound">Main</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13" refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a0d4996e719ec846ccd4be7d21cdfb2e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>ArrayList&lt;String&gt;<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a0d4996e719ec846ccd4be7d21cdfb2e5" kindref="member">adjacencies</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ArrayList&lt;String&gt;();</highlight><highlight class="comment">//adjacency<sp/>pair<sp/>example:<sp/><sp/>1-2,<sp/>3-1<sp/><sp/>1,2,3<sp/>are<sp/>vertices<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a9e9e1529522bffb58584b4f319e07217" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>ArrayList&lt;Vertex&gt;<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a9e9e1529522bffb58584b4f319e07217" kindref="member">vertices</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ArrayList&lt;Vertex&gt;();</highlight><highlight class="comment">//all<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a557eccaa4afe7d83cf6cc262d1ba1f3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>ArrayList&lt;Vertex&gt;<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a557eccaa4afe7d83cf6cc262d1ba1f3d" kindref="member">toBeProcessed</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ArrayList&lt;Vertex&gt;();</highlight></codeline>
<codeline lineno="16" refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1af031de92d898217502e31dcd4d6c9539" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>ArrayList&lt;Vertex&gt;<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1af031de92d898217502e31dcd4d6c9539" kindref="member">eliminatedList</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ArrayList&lt;Vertex&gt;();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a41add3527abb4fb4d0c9640aa20fba59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a41add3527abb4fb4d0c9640aa20fba59" kindref="member">main</ref>(String[]<sp/>args)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main" kindref="compound">Main</ref><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a41add3527abb4fb4d0c9640aa20fba59" kindref="member">main</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main" kindref="compound">Main</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>main.go(args);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1aecef650b770eeab79fb0620dee263f77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1aecef650b770eeab79fb0620dee263f77" kindref="member">go</ref>(String[]<sp/>args)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(args.length<sp/>!=<sp/>2)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.out.println(</highlight><highlight class="stringliteral">&quot;Two<sp/>files<sp/>are<sp/>required,<sp/>one<sp/>is<sp/>the<sp/>phoneList,<sp/>and<sp/>another<sp/>is<sp/>adjacency<sp/>List&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>phoneFile<sp/>=<sp/>args[0];</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>neighborFile<sp/>=<sp/>args[1];</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_registration" kindref="compound">Registration</ref><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_registration" kindref="compound">Registration</ref>(<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a9e9e1529522bffb58584b4f319e07217" kindref="member">vertices</ref>,<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a0d4996e719ec846ccd4be7d21cdfb2e5" kindref="member">adjacencies</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.registerVertices(phoneFile);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.registerAdjacencies(neighborFile);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_connection_matrix" kindref="compound">ConnectionMatrix</ref><sp/>cm<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_connection_matrix" kindref="compound">ConnectionMatrix</ref>(<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a9e9e1529522bffb58584b4f319e07217" kindref="member">vertices</ref>,<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a0d4996e719ec846ccd4be7d21cdfb2e5" kindref="member">adjacencies</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cm.buildConnectionMatrix();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_steps_matrix" kindref="compound">StepsMatrix</ref><sp/>sm<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_steps_matrix" kindref="compound">StepsMatrix</ref>(<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a9e9e1529522bffb58584b4f319e07217" kindref="member">vertices</ref>,<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a557eccaa4afe7d83cf6cc262d1ba1f3d" kindref="member">toBeProcessed</ref>,<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1af031de92d898217502e31dcd4d6c9539" kindref="member">eliminatedList</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sm.buildStepsMatrix();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a9e9e1529522bffb58584b4f319e07217" kindref="member">vertices</ref>.size()<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community" kindref="compound">Community</ref><sp/>c<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_community" kindref="compound">Community</ref>(<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a9e9e1529522bffb58584b4f319e07217" kindref="member">vertices</ref>,<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a557eccaa4afe7d83cf6cc262d1ba1f3d" kindref="member">toBeProcessed</ref>,<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1af031de92d898217502e31dcd4d6c9539" kindref="member">eliminatedList</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a557eccaa4afe7d83cf6cc262d1ba1f3d" kindref="member">toBeProcessed</ref><sp/>=<sp/>c.buildCommunity();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Collections.sort(<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a557eccaa4afe7d83cf6cc262d1ba1f3d" kindref="member">toBeProcessed</ref>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_connection_matrix" kindref="compound">ConnectionMatrix</ref><sp/>cm1=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_connection_matrix" kindref="compound">ConnectionMatrix</ref>(<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a557eccaa4afe7d83cf6cc262d1ba1f3d" kindref="member">toBeProcessed</ref>,<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a0d4996e719ec846ccd4be7d21cdfb2e5" kindref="member">adjacencies</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cm1.buildConnectionMatrix();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_steps_matrix" kindref="compound">StepsMatrix</ref><sp/>sm1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_steps_matrix" kindref="compound">StepsMatrix</ref>(<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a9e9e1529522bffb58584b4f319e07217" kindref="member">vertices</ref>,<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a557eccaa4afe7d83cf6cc262d1ba1f3d" kindref="member">toBeProcessed</ref>,<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1af031de92d898217502e31dcd4d6c9539" kindref="member">eliminatedList</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sm1.buildStepsMatrix();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(NullPointerException<sp/>npe)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.out.println(</highlight><highlight class="stringliteral">&quot;Done&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a3e5569d3503edf65388ea1b8fad02742" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a3e5569d3503edf65388ea1b8fad02742" kindref="member">displayPrefix</ref>()</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.out.println(</highlight><highlight class="stringliteral">&quot;OUTPUT:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.out.print(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_vertex" kindref="compound">Vertex</ref><sp/>vertex<sp/>:<sp/><ref refid="classmain_1_1java_1_1com_1_1company_1_1dijkstratest_1_1_main_1a9e9e1529522bffb58584b4f319e07217" kindref="member">vertices</ref>)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.out.print(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>vertex);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.out.println(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/JulyaMaria/git/Practica_6_LDH_Dijkstra/DijkstraLDHP6/src/main/java/com/company/dijkstratest/Main.java"/>
  </compounddef>
</doxygen>
